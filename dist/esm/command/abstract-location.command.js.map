{"version":3,"file":"abstract-location.command.js","sourceRoot":"","sources":["../../../src/command/abstract-location.command.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AxiosResponse } from 'axios';\nimport { WorldCountryStateUtil } from '../util/world-country-state';\nimport { WorldCountryUtil } from '../util/world-country';\nimport { AccuracyEnum } from '../model';\nimport { UnsupportedAccuracyException } from '../exception';\nimport type { QueryInterface } from '../interface';\nimport type { Location } from '../model';\nimport type { AbstractLocationTransformer } from '../transformer';\nimport type { WorldCountry } from '../util/world-country';\nimport type { WorldCountryState } from '../util/world-country-state';\nimport { AbstractCommand } from './abstract.command';\n\nexport abstract class AbstractLocationCommand<\n    GeocoderQueryType extends QueryInterface = any,\n    ProviderRequestType = any,\n    ProviderResponseType = any,\n> extends AbstractCommand<GeocoderQueryType, Location, AbstractLocationTransformer, ProviderRequestType, ProviderResponseType> {\n    protected async parseResponse(_response: AxiosResponse<ProviderResponseType>, _query: GeocoderQueryType): Promise<AbstractLocationTransformer[]> {\n        throw new Error('AbstractLocationCommand.parseResponse: not implemented');\n    }\n\n    async execute(query: GeocoderQueryType): Promise<Location[]> {\n        let locations: Location[] = await super.execute(query);\n\n        locations = await this.addMissingLocationProperties(locations);\n        locations = this.filterByAccuracy(locations, query.accuracy);\n\n        if (query.limit && locations.length > query.limit) {\n            return locations.slice(0, query.limit);\n        }\n\n        return locations;\n    }\n\n    protected async addMissingLocationProperties(locations: Location[]): Promise<Location[]> {\n        for (const location of locations) {\n            if (!location.countryCode || !location.country) {\n                try {\n                    const country: WorldCountry | undefined = await WorldCountryUtil.find({\n                        cca2: location.countryCode,\n                        name: location.country,\n                    });\n\n                    if (country) {\n                        location.countryCode = country.cca2;\n                        location.country = country.name.common;\n                    }\n                } catch (err: any) {\n                    this.getLogger().error(err, { location });\n                }\n            }\n\n            if (location.countryCode) {\n                try {\n                    const state: WorldCountryState | undefined = await WorldCountryStateUtil.find({\n                        countryCode: location.countryCode,\n                        stateCode: location.stateCode,\n                        name: location.state,\n                    });\n\n                    if (state) {\n                        location.state = state.name;\n                        location.stateCode = state.stateCode;\n                    }\n                } catch (err: any) {\n                    this.getLogger().error(err, { location });\n                }\n            }\n        }\n\n        return locations;\n    }\n\n    protected filterByAccuracy(locations: Location[], accuracy?: AccuracyEnum): Location[] {\n        if (!accuracy) {\n            return locations;\n        }\n\n        return locations.filter((location: Location) => {\n            switch (accuracy) {\n                case AccuracyEnum.HOUSE_NUMBER:\n                    return !!(\n                        location.houseNumber &&\n                        location.postalCode &&\n                        location.streetName &&\n                        location.city &&\n                        location.state &&\n                        location.stateCode &&\n                        location.country &&\n                        location.countryCode &&\n                        location.provider\n                    );\n                case AccuracyEnum.STREET_NAME:\n                    return !!(\n                        location.postalCode &&\n                        location.streetName &&\n                        location.city &&\n                        location.state &&\n                        location.stateCode &&\n                        location.country &&\n                        location.countryCode &&\n                        location.provider\n                    );\n                case AccuracyEnum.CITY:\n                    return !!(location.city && location.state && location.stateCode && location.country && location.countryCode && location.provider);\n                case AccuracyEnum.STATE:\n                    return !!(location.state && location.stateCode && location.country && location.countryCode && location.provider);\n                case AccuracyEnum.COUNTRY:\n                    return !!(location.country && location.countryCode && location.provider);\n                default:\n                    throw new UnsupportedAccuracyException(`Unsupported \"${accuracy}\" accuracy.`);\n            }\n        });\n    }\n}\n"]}