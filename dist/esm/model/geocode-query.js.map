{"version":3,"file":"geocode-query.js","sourceRoot":"","sources":["../../../src/model/geocode-query.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC7G,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAE,sBAAsB,EAAE,MAAM,eAAe,CAAC;AAEvD,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,MAAM,OAAO,YAAa,SAAQ,KAAK;IAAvC;;QASI,eAAU,GAAY,KAAK,CAAC;IAiDhC,CAAC;CAAA;AAzDG;IAAC,QAAQ,EAAE;IACV,UAAU,EAAE;IACZ,SAAS,CAAC,CAAC,CAAC;IACZ,SAAS,CAAC,GAAG,CAAC;;6CACC;AAEhB;IAAC,SAAS,EAAE;IACX,sBAAsB,EAAE;;gDACG;AAE5B;IAAC,UAAU,EAAE;IACZ,QAAQ,EAAE;IACV,SAAS,CAAC,CAAC,CAAC;IACZ,SAAS,CAAC,GAAG,CAAC;;6CACE;AAEjB;IAAC,UAAU,EAAE;IACZ,QAAQ,EAAE;IACV,SAAS,CAAC,CAAC,CAAC;IACZ,SAAS,CAAC,GAAG,CAAC;;2CACA;AAEf;IAAC,UAAU,EAAE;IACZ,QAAQ,EAAE;IACV,SAAS,CAAC,CAAC,CAAC;IACZ,SAAS,CAAC,GAAG,CAAC;;+CACI;AAEnB;IAAC,UAAU,EAAE;IACZ,QAAQ,EAAE;IACV,SAAS,CAAC,CAAC,CAAC;IACZ,SAAS,CAAC,EAAE,CAAC;;0CACA;AAEd;IAAC,UAAU,EAAE;IACZ,QAAQ,EAAE;IACV,SAAS,CAAC,CAAC,CAAC;IACZ,SAAS,CAAC,EAAE,CAAC;;gDACM;AAEpB;IAAC,UAAU,EAAE;IACZ,QAAQ,EAAE;IACV,GAAG,CAAC,CAAC,EAAE,CAAC;IACR,GAAG,CAAC,EAAE,CAAC;;yCACK;AAEb;IAAC,UAAU,EAAE;IACZ,QAAQ,EAAE;IACV,GAAG,CAAC,CAAC,GAAG,CAAC;IACT,GAAG,CAAC,GAAG,CAAC;;yCACI;AAEb;IAAC,UAAU,EAAE;IACZ,QAAQ,EAAE;IACV,GAAG,CAAC,CAAC,CAAC;IACN,GAAG,CAAC,OAAO,CAAC;;4CACG","sourcesContent":["import { IsNotEmpty, IsNumber, IsOptional, IsString, Max, MaxLength, Min, MinLength } from 'class-validator';\nimport { ToBoolean } from '../util/transformer';\nimport { IsExactMatchApplicable } from '../validation';\nimport type { GeocodeQueryInterface } from '../interface';\nimport { Query } from './query';\n\nexport class GeocodeQuery extends Query implements GeocodeQueryInterface {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(5)\n    @MaxLength(150)\n    address: string;\n\n    @ToBoolean()\n    @IsExactMatchApplicable()\n    exactMatch: boolean = false;\n\n    @IsOptional()\n    @IsString()\n    @MinLength(2)\n    @MaxLength(100)\n    country?: string;\n\n    @IsOptional()\n    @IsString()\n    @MinLength(2)\n    @MaxLength(100)\n    state?: string;\n\n    @IsOptional()\n    @IsString()\n    @MinLength(2)\n    @MaxLength(100)\n    stateCode?: string;\n\n    @IsOptional()\n    @IsString()\n    @MinLength(2)\n    @MaxLength(50)\n    city?: string;\n\n    @IsOptional()\n    @IsString()\n    @MinLength(3)\n    @MaxLength(20)\n    postalCode?: string;\n\n    @IsOptional()\n    @IsNumber()\n    @Min(-90)\n    @Max(90)\n    lat?: number;\n\n    @IsOptional()\n    @IsNumber()\n    @Min(-180)\n    @Max(180)\n    lon?: number;\n\n    @IsOptional()\n    @IsNumber()\n    @Min(0)\n    @Max(1000000)\n    radius?: number;\n}\n"]}