{"version":3,"file":"geocoder.js","sourceRoot":"","sources":["../../../src/geocoder/geocoder.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAEvD,MAAM,OAAO,QAAS,SAAQ,gBAAgB;IAC1C,YAAY,QAA0B;QAClC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,KAA4B;QACtC,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,KAA4B;QACtC,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,KAA4B;QACtC,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,KAA6B;QACxC,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,KAAK,CAAC,CAAC;IACnE,CAAC;CACJ","sourcesContent":["import type { DistanceQueryInterface, GeocodeQueryInterface, ReverseQueryInterface, SuggestQueryInterface } from '../interface';\nimport type { AbstractProvider, Distance, Location, Suggestion } from '../model';\nimport { AbstractGeocoder } from './abstract-geocoder';\n\nexport class Geocoder extends AbstractGeocoder {\n    constructor(provider: AbstractProvider) {\n        super([provider]);\n    }\n\n    async geocode(query: GeocodeQueryInterface): Promise<Location[]> {\n        return this.geocodeByProvider(this.getFirstProvider(), query);\n    }\n\n    async reverse(query: ReverseQueryInterface): Promise<Location[]> {\n        return this.reverseByProvider(this.getFirstProvider(), query);\n    }\n\n    async suggest(query: SuggestQueryInterface): Promise<Suggestion[]> {\n        return this.suggestByProvider(this.getFirstProvider(), query);\n    }\n\n    async distance(query: DistanceQueryInterface): Promise<Distance> {\n        return this.distanceByProvider(this.getFirstProvider(), query);\n    }\n}\n"]}