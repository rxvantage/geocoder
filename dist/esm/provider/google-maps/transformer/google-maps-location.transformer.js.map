{"version":3,"file":"google-maps-location.transformer.js","sourceRoot":"","sources":["../../../../../src/provider/google-maps/transformer/google-maps-location.transformer.ts"],"names":[],"mappings":"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","sourcesContent":["import { AbstractLocationTransformer } from '../../../transformer';\nimport { GoogleMapsProvider } from '../google-maps.provider';\n\nexport class GoogleMapsLocationTransformer extends AbstractLocationTransformer<GoogleMapsProvider> {\n    constructor(raw: Record<string, any>) {\n        super(GoogleMapsProvider, raw);\n    }\n\n    async getFormattedAddress(): Promise<string> {\n        return this.raw.formatted_address;\n    }\n\n    async getLatitude(): Promise<number> {\n        return this.raw.geometry.location.lat;\n    }\n\n    async getLongitude(): Promise<number> {\n        return this.raw.geometry.location.lng;\n    }\n\n    async getCountry(): Promise<string | undefined> {\n        const component: any | undefined = this.getAddressComponentsOfType('country').pop();\n\n        if (component) {\n            return component.long_name;\n        }\n    }\n\n    async getCountryCode(): Promise<string | undefined> {\n        const component: any | undefined = this.getAddressComponentsOfType('country').pop();\n\n        if (component) {\n            return component.short_name;\n        }\n    }\n\n    async getState(): Promise<string | undefined> {\n        const component: any | undefined = this.getAddressComponentsOfType('administrative_area_level_1').pop();\n\n        if (component) {\n            return component.long_name;\n        }\n    }\n\n    async getStateCode(): Promise<string | undefined> {\n        const component: any | undefined = this.getAddressComponentsOfType('administrative_area_level_1').pop();\n\n        if (component) {\n            return component.short_name;\n        }\n    }\n\n    async getCity(): Promise<string | undefined> {\n        for (const type of ['locality', 'sublocality', 'administrative_area_level_3', 'administrative_area_level_2']) {\n            const component: any | undefined = this.getAddressComponentsOfType(type).pop();\n\n            if (component) {\n                return component.long_name;\n            }\n        }\n    }\n\n    async getPostalCode(): Promise<string | undefined> {\n        const component: any | undefined = this.getAddressComponentsOfType('postal_code').pop();\n\n        if (component) {\n            return component.long_name;\n        }\n    }\n\n    async getStreetName(): Promise<string | undefined> {\n        const component: any | undefined = this.getAddressComponentsOfType('route').pop();\n\n        if (component) {\n            return component.long_name;\n        }\n    }\n\n    async getHouseNumber(): Promise<string | undefined> {\n        const component: any | undefined = this.getAddressComponentsOfType('street_number').pop();\n\n        if (component) {\n            return component.long_name;\n        }\n    }\n\n    async getPlaceId(): Promise<string | undefined> {\n        return this.raw.place_id;\n    }\n\n    private getAddressComponentsOfType(type: string): any[] {\n        if (!Array.isArray(this.raw.address_components)) {\n            return [];\n        }\n\n        return this.raw.address_components.filter((addressComponent: any) => addressComponent.types.includes(type));\n    }\n}\n"]}