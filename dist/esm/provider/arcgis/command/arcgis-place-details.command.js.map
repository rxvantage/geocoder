{"version":3,"file":"arcgis-place-details.command.js","sourceRoot":"","sources":["../../../../../src/provider/arcgis/command/arcgis-place-details.command.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAGvD,OAAO,EAAE,yBAAyB,EAAE,MAAM,SAAS,CAAC;AAEpD;;GAEG;AACH,MAAM,OAAO,yBAA0B,SAAQ,yBAAyB,CAAC,mBAAmB,CAAmC;IAC3H,YAAY,UAAyB,EAAmB,KAAc;QAClE,KAAK,CAAC,UAAU,CAAC,CAAC;QADkC,UAAK,GAAL,KAAK,CAAS;IAEtE,CAAC;IAED,MAAM,CAAC,MAAM;QACT,OAAO,2FAA2F,CAAC;IACvG,CAAC;IAES,KAAK,CAAC,UAAU,CAAC,KAAwB;QAC/C,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK;YACxB,QAAQ,EAAE,KAAK,CAAC,OAAO;YACvB,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,YAAY,EAAE,SAAS;YACvB,SAAS,EAAE,2FAA2F;YACtG,CAAC,EAAE,MAAM;SACZ,CAAC;IACN,CAAC;CACJ","sourcesContent":["import type { AxiosInstance } from 'axios';\nimport { PlaceDetailsCommand } from '../../../command';\nimport type { PlaceDetailsQuery } from '../../../model';\nimport type { ArcgisPlaceDetailsQueryInterface } from '../interface';\nimport { ArcgisGeocodeCommandMixin } from './mixin';\n\n/**\n * @link {https://developers.arcgis.com/rest/geocode/api-reference/geocoding-find-address-candidates.htm}\n */\nexport class ArcgisPlaceDetailsCommand extends ArcgisGeocodeCommandMixin(PlaceDetailsCommand)<ArcgisPlaceDetailsQueryInterface> {\n    constructor(httpClient: AxiosInstance, private readonly token?: string) {\n        super(httpClient);\n    }\n\n    static getUrl(): string {\n        return 'https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/findAddressCandidates';\n    }\n\n    protected async buildQuery(query: PlaceDetailsQuery): Promise<ArcgisPlaceDetailsQueryInterface> {\n        return {\n            token: this.token,\n            forStorage: !!this.token,\n            magicKey: query.placeId,\n            langCode: query.language,\n            locationType: 'rooftop',\n            outFields: 'Addr_type,LongLabel,AddNum,StAddr,City,RegionAbbr,Region,Country,Postal,DisplayX,DisplayY',\n            f: 'json',\n        };\n    }\n}\n"]}