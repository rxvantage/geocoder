{"version":3,"file":"arcgis-reverse.command.js","sourceRoot":"","sources":["../../../../../src/provider/arcgis/command/arcgis-reverse.command.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,wBAAwB,EAAE,MAAM,gBAAgB,CAAC;AAG1D,OAAO,EAAE,wBAAwB,EAAE,MAAM,SAAS,CAAC;AAEnD;;GAEG;AACH,MAAM,OAAO,oBAAqB,SAAQ,wBAAwB,CAAC,cAAc,CAA8B;IAC3G,YAAY,UAAyB,EAAmB,KAAc;QAClE,KAAK,CAAC,UAAU,CAAC,CAAC;QADkC,UAAK,GAAL,KAAK,CAAS;IAEtE,CAAC;IAED,MAAM,CAAC,MAAM;QACT,OAAO,oFAAoF,CAAC;IAChG,CAAC;IAES,KAAK,CAAC,UAAU,CAAC,KAAmB;QAC1C,MAAM,YAAY,GAAa,EAAE,CAAC;QAElC,QAAQ,KAAK,CAAC,QAAQ,EAAE;YACpB,KAAK,YAAY,CAAC,YAAY;gBAC1B,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAClC,MAAM;YACV,KAAK,YAAY,CAAC,WAAW;gBACzB,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;gBACnD,MAAM;YACV,KAAK,YAAY,CAAC,OAAO,CAAC;YAC1B,KAAK,YAAY,CAAC,KAAK,CAAC;YACxB,KAAK,YAAY,CAAC,IAAI;gBAClB,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;gBAC/D,MAAM;YACV;gBACI,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACzC;QAED,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK;YACxB,QAAQ,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE;YACrC,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YACpC,YAAY,EAAE,KAAK,CAAC,KAAK;YACzB,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,YAAY,EAAE,SAAS;YACvB,CAAC,EAAE,MAAM;SACZ,CAAC;IACN,CAAC;IAES,KAAK,CAAC,aAAa,CAAC,QAAuB;QACjD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnD,OAAO,EAAE,CAAC;SACb;QAED,MAAM,GAAG,GAAQ,QAAQ,CAAC,IAAI,CAAC;QAE/B,OAAO,CAAC,IAAI,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/C,CAAC;CACJ","sourcesContent":["import type { AxiosInstance, AxiosResponse } from 'axios';\nimport { ReverseCommand } from '../../../command';\nimport { AccuracyEnum } from '../../../model';\nimport { ArcgisReverseTransformer } from '../transformer';\nimport type { ArcgisReverseQueryInterface } from '../interface';\nimport type { ReverseQuery } from '../../../model';\nimport { ArcgisCommonCommandMixin } from './mixin';\n\n/**\n * @link {https://developers.arcgis.com/rest/geocode/api-reference/geocoding-reverse-geocode.htm}\n */\nexport class ArcgisReverseCommand extends ArcgisCommonCommandMixin(ReverseCommand)<ArcgisReverseQueryInterface> {\n    constructor(httpClient: AxiosInstance, private readonly token?: string) {\n        super(httpClient);\n    }\n\n    static getUrl(): string {\n        return 'https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode';\n    }\n\n    protected async buildQuery(query: ReverseQuery): Promise<ArcgisReverseQueryInterface> {\n        const featureTypes: string[] = [];\n\n        switch (query.accuracy) {\n            case AccuracyEnum.HOUSE_NUMBER:\n                featureTypes.push('PointAddress');\n                break;\n            case AccuracyEnum.STREET_NAME:\n                featureTypes.push('PointAddress', 'StreetAddress');\n                break;\n            case AccuracyEnum.COUNTRY:\n            case AccuracyEnum.STATE:\n            case AccuracyEnum.CITY:\n                featureTypes.push('PointAddress', 'StreetAddress', 'Locality');\n                break;\n            default:\n                featureTypes.push('PointAddress');\n        }\n\n        return {\n            token: this.token,\n            forStorage: !!this.token,\n            location: `${query.lon},${query.lat}`,\n            featureTypes: featureTypes.join(','),\n            maxLocations: query.limit,\n            langCode: query.language,\n            locationType: 'rooftop',\n            f: 'json',\n        };\n    }\n\n    protected async parseResponse(response: AxiosResponse): Promise<ArcgisReverseTransformer[]> {\n        if (!response.data.address || !response.data.location) {\n            return [];\n        }\n\n        const raw: any = response.data;\n\n        return [new ArcgisReverseTransformer(raw)];\n    }\n}\n"]}