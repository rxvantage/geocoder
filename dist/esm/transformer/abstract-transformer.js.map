{"version":3,"file":"abstract-transformer.js","sourceRoot":"","sources":["../../../src/transformer/abstract-transformer.ts"],"names":[],"mappings":"AAIA,MAAM,OAAgB,mBAAmB;IAIrC,YAAY,aAAsC,EAAE,GAAyB;QACzE,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC;QACnC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;CAGJ","sourcesContent":["import type { ClassTransformOptions } from 'class-transformer';\nimport type { AbstractHttpProvider } from '../model';\nimport type { Type } from '../types';\n\nexport abstract class AbstractTransformer<HttpProviderClass extends AbstractHttpProvider = any, ProviderRawEntryType = any> {\n    readonly provider: string;\n    readonly raw: ProviderRawEntryType;\n\n    constructor(providerClass: Type<HttpProviderClass>, raw: ProviderRawEntryType) {\n        this.provider = providerClass.name;\n        this.raw = raw;\n    }\n\n    abstract transform(options?: ClassTransformOptions): Promise<any>;\n}\n"]}