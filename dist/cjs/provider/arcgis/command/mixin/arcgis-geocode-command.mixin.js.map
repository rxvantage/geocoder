{"version":3,"file":"arcgis-geocode-command.mixin.js","sourceRoot":"","sources":["../../../../../../src/provider/arcgis/command/mixin/arcgis-geocode-command.mixin.ts"],"names":[],"mappings":";;;AACA,qDAA8H;AAC9H,mDAA8D;AAG9D,+EAAyE;AAEzE,SAAgB,yBAAyB,CAA6C,IAAW;IAC7F,MAAe,oBAAqB,SAAQ,IAAA,sDAAwB,EAAC,IAAI,CAAC;QAC5D,KAAK,CAAC,gBAAgB,CAAC,QAAuB;YACpD,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;gBACrB,MAAM,KAAK,GAAQ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;gBAEvC,QAAQ,KAAK,CAAC,IAAI,EAAE;oBAChB,KAAK,GAAG;wBACJ,MAAM,IAAI,oCAAwB,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;oBAChE,KAAK,GAAG,CAAC;oBACT,KAAK,GAAG,CAAC;oBACT,KAAK,GAAG;wBACJ,MAAM,IAAI,uCAA2B,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;oBACnE;wBACI,MAAM,IAAI,0CAA8B,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;iBACzE;aACJ;QACL,CAAC;QAES,KAAK,CAAC,aAAa,CAAC,QAAuB;YACjD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBAC9E,OAAO,EAAE,CAAC;aACb;YAED,OAAO,OAAO,CAAC,GAAG,CACd,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,GAAQ,EAAsC,EAAE,CAAC,IAAI,uCAAyB,CAAC,GAAG,CAAC,CAAC,CAC3H,CAAC;QACN,CAAC;KACJ;IAED,OAAO,oBAAoB,CAAC;AAChC,CAAC;AA/BD,8DA+BC","sourcesContent":["import type { AxiosResponse } from 'axios';\nimport { InvalidArgumentException, InvalidCredentialsException, InvalidServerResponseException } from '../../../../exception';\nimport { ArcgisLocationTransformer } from '../../transformer';\nimport type { AbstractCommand } from '../../../../command';\nimport type { Constructor } from '../../../../types';\nimport { ArcgisCommonCommandMixin } from './arcgis-common-command.mixin';\n\nexport function ArcgisGeocodeCommandMixin<TBase extends Constructor<AbstractCommand>>(Base: TBase): TBase {\n    abstract class ArcgisGeocodeCommand extends ArcgisCommonCommandMixin(Base) {\n        protected async validateResponse(response: AxiosResponse): Promise<void> {\n            if (response.data.error) {\n                const error: any = response.data.error;\n\n                switch (error.code) {\n                    case 400:\n                        throw new InvalidArgumentException(error.message, response);\n                    case 403:\n                    case 498:\n                    case 499:\n                        throw new InvalidCredentialsException(error.message, response);\n                    default:\n                        throw new InvalidServerResponseException(error.message, response);\n                }\n            }\n        }\n\n        protected async parseResponse(response: AxiosResponse): Promise<ArcgisLocationTransformer[]> {\n            if (!Array.isArray(response.data.candidates) || !response.data.candidates.length) {\n                return [];\n            }\n\n            return Promise.all<ArcgisLocationTransformer>(\n                response.data.candidates.map(async (raw: any): Promise<ArcgisLocationTransformer> => new ArcgisLocationTransformer(raw)),\n            );\n        }\n    }\n\n    return ArcgisGeocodeCommand;\n}\n"]}