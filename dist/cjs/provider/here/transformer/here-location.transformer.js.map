{"version":3,"file":"here-location.transformer.js","sourceRoot":"","sources":["../../../../../src/provider/here/transformer/here-location.transformer.ts"],"names":[],"mappings":";;;AAAA,sDAAmE;AACnE,oDAAgD;AAIhD,MAAa,uBAAwB,SAAQ,yCAA4D;IACrG,YAAY,GAAsB;QAC9B,KAAK,CAAC,4BAAY,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,mBAAmB;QACrB,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,KAAK,CAAC,WAAW;QACb,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,YAAY;QACd,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,MAAM,OAAO,GAAuB,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;QAE/E,IAAI,OAAO,EAAE;YACT,OAAO,OAAO,CAAC;SAClB;QAED,MAAM,IAAI,GAAuB,IAAI,CAAC,kBAAkB,EAAE,CAAC,OAAO,CAAC;QACnE,MAAM,YAAY,GAA6B,MAAM,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QAEpF,OAAO,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,cAAc;QAChB,MAAM,WAAW,GAAuB,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAEhF,IAAI,WAAW,EAAE;YACb,OAAO,WAAW,CAAC;SACtB;QAED,MAAM,IAAI,GAAuB,IAAI,CAAC,kBAAkB,EAAE,CAAC,OAAO,CAAC;QACnE,MAAM,YAAY,GAA6B,MAAM,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QAEpF,OAAO,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,QAAQ;QACV,OAAO,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC;IACvF,CAAC;IAED,KAAK,CAAC,YAAY;QACd,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,KAAK,CAAC,OAAO;QACT,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,aAAa;QACf,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,UAAU,CAAC;IAChD,CAAC;IAED,KAAK,CAAC,aAAa;QACf,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,MAAM,CAAC;IAC5C,CAAC;IAED,KAAK,CAAC,cAAc;QAChB,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,WAAW,CAAC;IACjD,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC;IACxC,CAAC;IAEO,kBAAkB;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,IAAI,EAAE,cAAc,EAAE,EAAE,EAAE,CAAC;IAC/D,CAAC;IAEO,sBAAsB,CAAC,GAAkD;;QAC7E,MAAM,IAAI,GAAuD,MAAA,IAAI,CAAC,kBAAkB,EAAE,CAAC,cAAc,0CAAE,IAAI,CAC3G,CAAC,OAA+C,EAAqD,EAAE,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,CAC9H,CAAC;QAEF,IAAI,IAAI,EAAE;YACN,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;IACL,CAAC;CACJ;AApFD,0DAoFC","sourcesContent":["import { AbstractLocationTransformer } from '../../../transformer';\nimport { HereProvider } from '../here.provider';\nimport type { WorldCountry } from '../../../util/world-country';\nimport type { HereOneResultAddressAdditionalDataType, HereOneResultAddressType, HereOneResultType } from '../interface';\n\nexport class HereLocationTransformer extends AbstractLocationTransformer<HereProvider, HereOneResultType> {\n    constructor(raw: HereOneResultType) {\n        super(HereProvider, raw);\n    }\n\n    async getFormattedAddress(): Promise<string | undefined> {\n        return this.getLocationAddress().Label;\n    }\n\n    async getLatitude(): Promise<number> {\n        return this.raw.Location.DisplayPosition.Latitude;\n    }\n\n    async getLongitude(): Promise<number> {\n        return this.raw.Location.DisplayPosition.Longitude;\n    }\n\n    async getCountry(): Promise<string | undefined> {\n        const country: string | undefined = this.getAdditionalDataByKey('CountryName');\n\n        if (country) {\n            return country;\n        }\n\n        const cca3: string | undefined = this.getLocationAddress().Country;\n        const worldCountry: WorldCountry | undefined = await this.getWorldCountry({ cca3 });\n\n        return worldCountry && worldCountry.name.common;\n    }\n\n    async getCountryCode(): Promise<string | undefined> {\n        const countryCode: string | undefined = this.getAdditionalDataByKey('Country2');\n\n        if (countryCode) {\n            return countryCode;\n        }\n\n        const cca3: string | undefined = this.getLocationAddress().Country;\n        const worldCountry: WorldCountry | undefined = await this.getWorldCountry({ cca3 });\n\n        return worldCountry && worldCountry.cca2;\n    }\n\n    async getState(): Promise<string | undefined> {\n        return this.getAdditionalDataByKey('StateName') || this.getLocationAddress().State;\n    }\n\n    async getStateCode(): Promise<string | undefined> {\n        return this.getLocationAddress().State;\n    }\n\n    async getCity(): Promise<string | undefined> {\n        return this.getLocationAddress().City;\n    }\n\n    async getPostalCode(): Promise<string | undefined> {\n        return this.getLocationAddress().PostalCode;\n    }\n\n    async getStreetName(): Promise<string | undefined> {\n        return this.getLocationAddress().Street;\n    }\n\n    async getHouseNumber(): Promise<string | undefined> {\n        return this.getLocationAddress().HouseNumber;\n    }\n\n    async getPlaceId(): Promise<string> {\n        return this.raw.Location.LocationId;\n    }\n\n    private getLocationAddress(): HereOneResultAddressType {\n        return this.raw.Location.Address || { AdditionalData: [] };\n    }\n\n    private getAdditionalDataByKey(key: HereOneResultAddressAdditionalDataType['key']): HereOneResultAddressAdditionalDataType['value'] | undefined {\n        const data: HereOneResultAddressAdditionalDataType | undefined = this.getLocationAddress().AdditionalData?.find<HereOneResultAddressAdditionalDataType>(\n            (element: HereOneResultAddressAdditionalDataType): element is HereOneResultAddressAdditionalDataType => key === element.key,\n        );\n\n        if (data) {\n            return data.value;\n        }\n    }\n}\n"]}