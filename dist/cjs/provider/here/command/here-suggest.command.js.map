{"version":3,"file":"here-suggest.command.js","sourceRoot":"","sources":["../../../../../src/provider/here/command/here-suggest.command.ts"],"names":[],"mappings":";;;AACA,8CAAkD;AAClD,gDAA2D;AAC3D,kCAA2C;AAG3C,mCAAmD;AAEnD;;GAEG;AACH,MAAa,kBAAmB,SAAQ,IAAA,gCAAwB,EAAC,wBAAc,CAA8C;IACzH,YAAY,UAAyB,EAAE,KAAa,EAAE,OAAe;QACjE,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,MAAM;QACT,OAAO,+CAA+C,CAAC;IAC3D,CAAC;IAES,KAAK,CAAC,aAAa,CAAC,QAAyC,EAAE,KAA4B;QACjG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YAC3G,OAAO,EAAE,CAAC;SACb;QAED,IAAI,OAAO,GAAU,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAE3D,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,IAAA,uBAAgB,EAAC,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9E,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACjB,OAAO,EAAE,CAAC;SACb;QAED,OAAO,OAAO,CAAC,GAAG,CAA4B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAQ,EAAsC,EAAE,CAAC,IAAI,uCAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3J,CAAC;CACJ;AAvBD,gDAuBC","sourcesContent":["import type { AxiosInstance, AxiosResponse } from 'axios';\nimport { SuggestCommand } from '../../../command';\nimport { HereSuggestionTransformer } from '../transformer';\nimport { filterByAccuracy } from '../util';\nimport type { HereResponseType, HereSuggestQueryInterface } from '../interface';\nimport type { SuggestQueryInterface } from '../../../interface';\nimport { HereLocationCommandMixin } from './mixin';\n\n/**\n * @link {https://developer.here.com/documentation/geocoder/topics/resource-search.html}\n */\nexport class HereSuggestCommand extends HereLocationCommandMixin(SuggestCommand)<HereSuggestQueryInterface, HereResponseType> {\n    constructor(httpClient: AxiosInstance, appId: string, appCode: string) {\n        super(httpClient, appId, appCode);\n    }\n\n    static getUrl(): string {\n        return 'https://geocoder.api.here.com/6.2/search.json';\n    }\n\n    protected async parseResponse(response: AxiosResponse<HereResponseType>, query: SuggestQueryInterface): Promise<HereSuggestionTransformer[]> {\n        if (!response.data.Response || !Array.isArray(response.data.Response.View) || !response.data.Response.View[0]) {\n            return [];\n        }\n\n        let results: any[] = response.data.Response.View[0].Result;\n\n        results = results.filter((raw: any) => filterByAccuracy(raw, query.accuracy));\n        if (!results.length) {\n            return [];\n        }\n\n        return Promise.all<HereSuggestionTransformer>(results.map(async (raw: any): Promise<HereSuggestionTransformer> => new HereSuggestionTransformer(raw)));\n    }\n}\n"]}