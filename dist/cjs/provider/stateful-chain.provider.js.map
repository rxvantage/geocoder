{"version":3,"file":"stateful-chain.provider.js","sourceRoot":"","sources":["../../../src/provider/stateful-chain.provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { ValidationException } from '../exception';\nimport { AbstractChainProvider } from '../model';\nimport type { GeocodeQueryInterface, ReverseQueryInterface, SuggestQueryInterface } from '../interface';\nimport type { AbstractHttpProvider, AbstractProvider, Location, Suggestion } from '../model';\n\nexport class StatefulChainProvider extends AbstractChainProvider {\n    private nextProvider: AbstractProvider;\n\n    constructor(providers: AbstractHttpProvider[]) {\n        super(providers);\n\n        this.setNextProvider();\n    }\n\n    async geocode(query: GeocodeQueryInterface): Promise<Location[]> {\n        for (const provider of this.getOrderedProvidersList()) {\n            try {\n                this.setNextProvider();\n\n                const locations: Location[] = await provider.geocode(query);\n\n                if (locations.length) {\n                    return locations;\n                }\n            } catch (err: any) {\n                if (err instanceof ValidationException) {\n                    throw err;\n                }\n\n                this.getLogger().warn(err);\n            }\n        }\n\n        return [];\n    }\n\n    async reverse(query: ReverseQueryInterface): Promise<Location[]> {\n        for (const provider of this.getOrderedProvidersList()) {\n            try {\n                this.setNextProvider();\n\n                const locations: Location[] = await provider.reverse(query);\n\n                if (locations.length) {\n                    return locations;\n                }\n            } catch (err: any) {\n                if (err instanceof ValidationException) {\n                    throw err;\n                }\n\n                this.getLogger().warn(err);\n            }\n        }\n\n        return [];\n    }\n\n    async suggest(query: SuggestQueryInterface): Promise<Suggestion[]> {\n        for (const provider of this.getOrderedProvidersList()) {\n            try {\n                this.setNextProvider();\n\n                return await provider.suggest(query);\n            } catch (err: any) {\n                if (err instanceof ValidationException) {\n                    throw err;\n                }\n\n                this.getLogger().warn(err);\n            }\n        }\n\n        return [];\n    }\n\n    private setNextProvider(): this {\n        const providers: AbstractProvider[] = this.getProviders();\n\n        if (!this.nextProvider) {\n            this.nextProvider = this.getFirstProvider();\n        } else {\n            const currentProviderIndex: number = providers.indexOf(this.nextProvider);\n            this.nextProvider = providers[currentProviderIndex + 1] || this.getFirstProvider();\n        }\n\n        return this;\n    }\n\n    /**\n     * The round robin queue of providers\n     */\n    private getOrderedProvidersList(): AbstractProvider[] {\n        const providers: AbstractProvider[] = this.getProviders();\n\n        const nextProviderIndex: number = providers.indexOf(this.nextProvider);\n\n        return providers.slice(nextProviderIndex).concat(providers.slice(0, nextProviderIndex));\n    }\n}\n"]}