{"version":3,"file":"abstract-distance-transformer.js","sourceRoot":"","sources":["../../../src/transformer/abstract-distance-transformer.ts"],"names":[],"mappings":";;;AAAA,yDAAoD;AAEpD,gDAA6C;AAG7C,iEAA6D;AAE7D,MAAsB,2BAA8G,SAAQ,0CAG3I;IAIG,KAAK,CAAC,SAAS,CAAC,OAA+B;QAC3C,MAAM,QAAQ,GAAa,IAAI,mBAAQ,EAAwB,CAAC;QAEhE,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAClC,QAAQ,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QAC7C,QAAQ,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QAC7C,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAExB,OAAO,IAAA,mCAAe,EAAiF,mBAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IACxI,CAAC;CACJ;AAjBD,kEAiBC","sourcesContent":["import { plainToInstance } from 'class-transformer';\nimport type { ClassTransformOptions } from 'class-transformer';\nimport { Distance } from '../model/distance';\nimport type { DistanceDetailsInterface } from '../interface';\nimport type { AbstractHttpProvider } from '../model';\nimport { AbstractTransformer } from './abstract-transformer';\n\nexport abstract class AbstractDistanceTransformer<HttpProviderClass extends AbstractHttpProvider = any, ProviderRawEntryType = any> extends AbstractTransformer<\n    HttpProviderClass,\n    ProviderRawEntryType\n> {\n    abstract getDistance(): Promise<DistanceDetailsInterface['distance']>;\n    abstract getDuration(): Promise<DistanceDetailsInterface['duration']>;\n\n    async transform(options?: ClassTransformOptions): Promise<Distance<ProviderRawEntryType>> {\n        const distance: Distance = new Distance<ProviderRawEntryType>();\n\n        distance.provider = this.provider;\n        distance.distance = await this.getDistance();\n        distance.duration = await this.getDuration();\n        distance.raw = this.raw;\n\n        return plainToInstance<Distance<ProviderRawEntryType>, DistanceDetailsInterface<ProviderRawEntryType>>(Distance, distance, options);\n    }\n}\n"]}