{"version":3,"file":"distance-query.js","sourceRoot":"","sources":["../../../src/model/distance-query.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yDAAyC;AACzC,qDAAqE;AAErE,yDAAoD;AACpD,mCAAgC;AAChC,mCAAgC;AAEhC,MAAa,aAAc,SAAQ,aAAK;IAAxC;;QAWI,SAAI,GAAoB,iCAAc,CAAC,OAAO,CAAC;IACnD,CAAC;CAAA;AAXG;IAAC,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,aAAK,CAAC;IACjB,IAAA,gCAAc,GAAE;8BACX,aAAK;2CAAC;AAEZ;IAAC,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,aAAK,CAAC;IACjB,IAAA,gCAAc,GAAE;8BACb,aAAK;yCAAC;AAEV;IAAC,IAAA,wBAAM,EAAC,iCAAc,CAAC;IACtB,IAAA,4BAAU,GAAE;;2CACkC;AAXnD,sCAYC","sourcesContent":["import { Type } from 'class-transformer';\nimport { IsEnum, IsOptional, ValidateNested } from 'class-validator';\nimport type { DistanceQueryInterface } from '../interface';\nimport { TravelModeEnum } from './travel-mode.enum';\nimport { Point } from './point';\nimport { Query } from './query';\n\nexport class DistanceQuery extends Query implements DistanceQueryInterface {\n    @Type(() => Point)\n    @ValidateNested()\n    from: Point;\n\n    @Type(() => Point)\n    @ValidateNested()\n    to: Point;\n\n    @IsEnum(TravelModeEnum)\n    @IsOptional()\n    mode?: TravelModeEnum = TravelModeEnum.DRIVING;\n}\n"]}