{"version":3,"file":"geocode-query.js","sourceRoot":"","sources":["../../../src/model/geocode-query.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qDAA6G;AAC7G,qDAAgD;AAChD,8CAAuD;AAEvD,mCAAgC;AAEhC,MAAa,YAAa,SAAQ,aAAK;IAAvC;;QASI,eAAU,GAAY,KAAK,CAAC;IAiDhC,CAAC;CAAA;AAzDG;IAAC,IAAA,0BAAQ,GAAE;IACV,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,EAAC,CAAC,CAAC;IACZ,IAAA,2BAAS,EAAC,GAAG,CAAC;;6CACC;AAEhB;IAAC,IAAA,uBAAS,GAAE;IACX,IAAA,mCAAsB,GAAE;;gDACG;AAE5B;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,CAAC,CAAC;IACZ,IAAA,2BAAS,EAAC,GAAG,CAAC;;6CACE;AAEjB;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,CAAC,CAAC;IACZ,IAAA,2BAAS,EAAC,GAAG,CAAC;;2CACA;AAEf;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,CAAC,CAAC;IACZ,IAAA,2BAAS,EAAC,GAAG,CAAC;;+CACI;AAEnB;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,CAAC,CAAC;IACZ,IAAA,2BAAS,EAAC,EAAE,CAAC;;0CACA;AAEd;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,CAAC,CAAC;IACZ,IAAA,2BAAS,EAAC,EAAE,CAAC;;gDACM;AAEpB;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,qBAAG,EAAC,CAAC,EAAE,CAAC;IACR,IAAA,qBAAG,EAAC,EAAE,CAAC;;yCACK;AAEb;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,qBAAG,EAAC,CAAC,GAAG,CAAC;IACT,IAAA,qBAAG,EAAC,GAAG,CAAC;;yCACI;AAEb;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,qBAAG,EAAC,CAAC,CAAC;IACN,IAAA,qBAAG,EAAC,OAAO,CAAC;;4CACG;AAzDpB,oCA0DC","sourcesContent":["import { IsNotEmpty, IsNumber, IsOptional, IsString, Max, MaxLength, Min, MinLength } from 'class-validator';\nimport { ToBoolean } from '../util/transformer';\nimport { IsExactMatchApplicable } from '../validation';\nimport type { GeocodeQueryInterface } from '../interface';\nimport { Query } from './query';\n\nexport class GeocodeQuery extends Query implements GeocodeQueryInterface {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(5)\n    @MaxLength(150)\n    address: string;\n\n    @ToBoolean()\n    @IsExactMatchApplicable()\n    exactMatch: boolean = false;\n\n    @IsOptional()\n    @IsString()\n    @MinLength(2)\n    @MaxLength(100)\n    country?: string;\n\n    @IsOptional()\n    @IsString()\n    @MinLength(2)\n    @MaxLength(100)\n    state?: string;\n\n    @IsOptional()\n    @IsString()\n    @MinLength(2)\n    @MaxLength(100)\n    stateCode?: string;\n\n    @IsOptional()\n    @IsString()\n    @MinLength(2)\n    @MaxLength(50)\n    city?: string;\n\n    @IsOptional()\n    @IsString()\n    @MinLength(3)\n    @MaxLength(20)\n    postalCode?: string;\n\n    @IsOptional()\n    @IsNumber()\n    @Min(-90)\n    @Max(90)\n    lat?: number;\n\n    @IsOptional()\n    @IsNumber()\n    @Min(-180)\n    @Max(180)\n    lon?: number;\n\n    @IsOptional()\n    @IsNumber()\n    @Min(0)\n    @Max(1000000)\n    radius?: number;\n}\n"]}