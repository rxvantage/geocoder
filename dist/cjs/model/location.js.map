{"version":3,"file":"location.js","sourceRoot":"","sources":["../../../src/model/location.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yDAAqE;AAK9D,IAAM,QAAQ,GAAd,MAAM,QAAQ;IAkDjB,IAAI,MAAM;QACN,OAAO,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;IACvE,CAAC;IAGD,wBAAwB;QACpB,OAAO,IAAI,CAAC,gBAAgB;YACxB,CAAC,CAAC,IAAI,CAAC,gBAAgB;YACvB,CAAC,CAAC;gBACI,IAAI,CAAC,MAAM,IAAI,EAAE;gBACjB,IAAI,CAAC,IAAI,IAAI,EAAE;gBACf,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE;gBACvE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,WAAW,IAAI,EAAE;aACzC;iBACI,MAAM,CAAC,OAAO,CAAC;iBACf,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,QAAQ,CAAC,OAA+B;QACpC,OAAO,IAAA,mCAAe,EAAiC,IAAI,EAAE,OAAO,CAA4C,CAAC;IACrH,CAAC;CACJ,CAAA;AAtEG;IAAC,IAAA,0BAAM,GAAE;;0CACQ;AAMjB;IAAC,IAAA,0BAAM,EAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;;kDAC9B;AAE1B;IAAC,IAAA,0BAAM,GAAE;;0CACQ;AAEjB;IAAC,IAAA,0BAAM,GAAE;;2CACS;AAElB;IAAC,IAAA,0BAAM,GAAE;;yCACQ;AAEjB;IAAC,IAAA,0BAAM,GAAE;;6CACY;AAErB;IAAC,IAAA,0BAAM,GAAE;;uCACM;AAKf;IAAC,IAAA,0BAAM,GAAE;;2CACU;AAEnB;IAAC,IAAA,0BAAM,GAAE;;sCACK;AAEd;IAAC,IAAA,0BAAM,GAAE;;4CACW;AAEpB;IAAC,IAAA,0BAAM,GAAE;;4CACW;AAEpB;IAAC,IAAA,0BAAM,GAAE;;6CACY;AAErB;IAAC,IAAA,0BAAM,GAAE;;yCACQ;AAEjB;IAAC,IAAA,0BAAM,EAAC,EAAE,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC;;qCACR;AAM3B;IAAC,IAAA,0BAAM,EAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;;;;wDAYvD;AAlEQ,QAAQ;IADpB,IAAA,2BAAO,GAAE;GACG,QAAQ,CAuEpB;AAvEY,4BAAQ","sourcesContent":["import { instanceToPlain, Exclude, Expose } from 'class-transformer';\nimport type { ClassTransformOptions } from 'class-transformer';\nimport type { LocationInterface } from '../interface';\n\n@Exclude()\nexport class Location<ProviderRawEntryType = any> implements LocationInterface<ProviderRawEntryType> {\n    @Expose()\n    provider: string;\n\n    /**\n     * @example 1200 E 89th St, Chicago, IL 60619, USA\n     * @example 1158 E 89th St, Chicago, Illinois 60619, US\n     */\n    @Expose({ name: 'formattedAddress', toClassOnly: true })\n    formattedAddress?: string;\n\n    @Expose()\n    latitude: number;\n\n    @Expose()\n    longitude: number;\n\n    @Expose()\n    country?: string;\n\n    @Expose()\n    countryCode?: string;\n\n    @Expose()\n    state?: string;\n\n    /**\n     * can be as ISO 3166-1 alpha-2 or an arbitrary string for countries that have no states\n     */\n    @Expose()\n    stateCode?: string;\n\n    @Expose()\n    city?: string;\n\n    @Expose()\n    postalCode?: string;\n\n    @Expose()\n    streetName?: string;\n\n    @Expose()\n    houseNumber?: string;\n\n    @Expose()\n    placeId?: string;\n\n    @Expose({ groups: ['raw', 'all'] })\n    raw?: ProviderRawEntryType;\n\n    get street(): string {\n        return `${this.houseNumber || ''} ${this.streetName || ''}`.trim();\n    }\n\n    @Expose({ name: 'formattedAddress', toPlainOnly: true })\n    generateFormattedAddress(): string {\n        return this.formattedAddress\n            ? this.formattedAddress\n            : [\n                  this.street || '',\n                  this.city || '',\n                  `${this.stateCode || this.state || ''} ${this.postalCode || ''}`.trim(),\n                  this.country || this.countryCode || '',\n              ]\n                  .filter(Boolean)\n                  .join(', ');\n    }\n\n    toObject(options?: ClassTransformOptions): LocationInterface<ProviderRawEntryType> {\n        return instanceToPlain<Location<ProviderRawEntryType>>(this, options) as LocationInterface<ProviderRawEntryType>;\n    }\n}\n"]}