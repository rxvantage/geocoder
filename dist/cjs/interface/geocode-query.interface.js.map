{"version":3,"file":"geocode-query.interface.js","sourceRoot":"","sources":["../../../src/interface/geocode-query.interface.ts"],"names":[],"mappings":"","sourcesContent":["import type { QueryInterface } from './query.interface';\n\nexport interface GeocodeQueryInterface extends QueryInterface {\n    /**\n     * Main required search field\n     */\n    address: string;\n\n    /**\n     * This query option is suitable for those who have an exact formatted address and needs to get the geo-data of this address.\n     * Currently this option only works if accuracy is not specified or it is set to AccuracyEnum.HOUSE_NUMBER\n     * and if query limit is not specified or it is more then one, otherwise ValidationException will be thrown.\n     *\n     * If a provider returns more than one possible option, then ExactMatchNotFoundException will be thrown.\n     *\n     * If the provider returns only one result and the optional countryCode and stateCode options are passed in the query,\n     * the result will be checked to match with this query options and if they do not match, then ExactMatchNotFoundException will be thrown.\n     *\n     * If successful, an array with one element will be returned.\n     *\n     * @default false\n     */\n    exactMatch?: boolean;\n\n    /**\n     * @default not applicable\n     */\n    country?: string;\n\n    /**\n     * @default not applicable\n     */\n    state?: string;\n\n    /**\n     * can be as ISO 3166-1 alpha-2 or an arbitrary string for countries that have no states\n     *\n     * @default not applicable\n     */\n    stateCode?: string;\n\n    /**\n     * @default not applicable\n     */\n    city?: string;\n\n    /**\n     * @default not applicable\n     */\n    postalCode?: string;\n\n    lat?: number;\n    lon?: number;\n    radius?: number;\n}\n"]}